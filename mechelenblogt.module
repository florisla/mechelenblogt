<?php
// $Id$

/**
 * Implements hook_help.
 * Display help and module information
 * @param path which path of the site we're displaying help
 * @param arg array that holds the current path as would be returned from arg() function
 * @return help text for the path
 */
function mechelenblogt_help($path, $arg) {
  $output = '';
  switch ($path) {
    case "admin/help#mechelenblogt":
      $output = '<p>'.  t("Maakt een eenvoudig 'statistiekjes' blok beschikbaar, waarvan de gegevens gecached worden. Cache wordt leeg gemaakt wanneer er een nieuwe reactie geplaatst wordt.</p><p>Wist de standaard naam 'Anoniem' op het reactieformulier zodat de gebruiker iets anders moet invullen.") .'</p>';
      break;
  }
  return $output;
}


/**
 * Implements hook_block_info.
 */
function mechelenblogt_block_info() {
  $blocks['statistiekjes'] = array(
    'info' => 'Mechelen Blogt statistiekjes',
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  return $blocks;
}


/**
 * Implements hook_block_view.
 */
function mechelenblogt_block_view($delta = '') {
  if ($delta != 'statistiekjes') {
    return $stats_block;
  }
  // set up the block 
  $stats_block = array(
    'subject' => 'Statistiekjes',
    'content' => mechelenblogt_get_statistiekjes($delta),
  );
  return $stats_block;
}


/**
 * Implements hook_comment_insert.
 * Clear the statistics cache when a comment is added.
 */
function mechelenblogt_comment_insert($comment) {
  echo("Comment insert");
  mechelenblogt_clear_statistiekjes();
}

/**
 * Implements hook_comment_delete.
 * Clear the statistics cache when a comment is removed.
 */
function mechelenblogt_comment_delete($comment) {
  mechelenblogt_clear_statistiekjes();
}


/**
 * Implements hook_comment_publish.
 * Clear the statistics cache when a comment is published.
 */
function mechelenblogt_comment_publish($comment) {
  mechelenblogt_clear_statistiekjes();
}


/**
 * Implements hook_comment_unpublish.
 * Clear the statistics cache when a comment is unpublished.
 */
function mechelenblogt_comment_unpublish($comment) {
  mechelenblogt_clear_statistiekjes();
}


/**
 * Hook_nodeapi implementation
 * Clear the statistics cache when a node is published or unpublished.
 */
function mmmechelenblogt_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  // there is no 'publish' operation (??), so we clear the cache with every node operation
  cache_clear_all('mechelenblogt_statistiekjes_message', 'cache');
  unset($mechelenblogt_statistiekjes_message);
}


/**
 * Clear the statistics cache.
 */
function mechelenblogt_clear_statistiekjes() {
  static $mechelenblogt_statistiekjes_message;
  cache_clear_all('mechelenblogt_statistiekjes_message', 'cache');
  unset($mechelenblogt_statistiekjes_message);
}

/**
 * Calculate the statistics and save it into a cached message.
 */
function mechelenblogt_get_statistiekjes($delta) {
  $REFRESH_INTERVAL = 60*60;  // hard refresh every hour
  
  static $mechelenblogt_statistiekjes_message;
  
  if (!isset($mechelenblogt_statistiekjes_message)) {
    // try to load from cache
    $cache = cache_get('mechelenblogt_statistiekjes_message');
    if ($cache && !empty($cache->data)) {	
      $mechelenblogt_statistiekjes_message = $cache->data;
    }
    else {
      $posts = db_query("SELECT COUNT(*) AS number FROM {node} WHERE created <= UNIX_TIMESTAMP() AND status = 1 AND type in ('blog_artikel', 'gastblog', 'enquete');")->fetchObject();

      $comments = db_query("SELECT SUM(comment_count) AS number FROM {node_comment_statistics} INNER JOIN {node} ON {node_comment_statistics}.nid = {node}.nid WHERE {node}.created <= UNIX_TIMESTAMP() AND {node}.type IN ('blog_artikel', 'gastblog', 'enquete') AND {node}.status = 1 AND {node.comment} > 0;")->fetchObject();
      $mechelenblogt_statistiekjes_message = '<p class="mechelenblogt-statistiekjes">Mechelen Blogt telt ' . number_format($posts->number, 0, ',', '.') . ' artikels en ' . number_format($comments->number, 0, ',', '.') . ' reacties.</p>';
      cache_set('mechelenblogt_statistiekjes_message', $mechelenblogt_statistiekjes_message, 'cache', time() + $REFRESH_INTERVAL);
    }
  }  
  
  return $mechelenblogt_statistiekjes_message;
}

